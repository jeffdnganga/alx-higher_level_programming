# 0-add_integer.txt
#  

===========================
How to Use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.

---

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(10, 2)
12

---

>>> add_integer(1, -2)
-1

and also works with floats, but it returns an integer addition
To assurre that, the function cast the numbers before addition

>>> add_integer(10.9123, 11.10101)
21

>>> add_integer(-10.0, 20)
10

Finally, b is an optional value that by default is 98

>>> add_integer(2)
100


Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

>>> add_integer("Non_integer")
Traceback (most recent call last):
TypeError: a must be an integer

::

>>> add_integer("Non_integer")
Traceback (most recent call last):
TypeError: a must be an integer

::

>>> add_integer(1, "Non_integer")
Traceback (most recent call last):
TypeError: b must be an integer

::

>>> add_integer("Non_integer", "Another")
Traceback (most recent call last):
TypeError: a must be an integer

::

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

::

>>> add_integer(1, None)
Traceback (most recent call last):
TypeError: b must be an integer

The function will fail if infinity is provided.

::

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

::

>>> add_integer(1 ,float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

::

The function will fail if NaN number is provided.

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(1, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer